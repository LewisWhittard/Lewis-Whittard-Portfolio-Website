@using System.Data
@using UIFactory.Factory.CSHTML.Concrete.Interface
@using UIFactory.Factory.Interface
@model List<IUI>

@foreach (var item in Model)
{
    @switch (item.UIType)
    {
        case UI.Card:
            var card = (UIFactory.Factory.CSHTML.Concrete.Card.Card)item;
            @await Html.PartialAsync("~/Views/Shared/_CardPartial.cshtml", card)
            break;
        case UI.Carousel:
            var carousel = (UIFactory.Factory.CSHTML.Concrete.Carousel.Carousel)item;
            @await Html.PartialAsync("~/Views/Shared/_CarouselPartial.cshtml", carousel)
            break;
        case UI.CarouselCard:
            var CarouselCard = (UIFactory.Factory.CSHTML.Concrete.CarouselCard.CarouselCard)item;
            @await Html.PartialAsync("~/Views/Shared/_CarouselCardPartial.cshtml", CarouselCard)
            break;
        case UI.InfomationBlock:
            var infomationBlock = (UIFactory.Factory.CSHTML.Concrete.InfomationBlock.InfomatonBlock)item;
            @await Html.PartialAsync("~/Views/Shared/_InfomatonBlockPartial.cshtml", infomationBlock)
            break;
        case UI.Table:
            var table = (UIFactory.Factory.CSHTML.Concrete.Table.Table)item;
            @await Html.PartialAsync("~/Views/Shared/_TablePartial.cshtml", table)
            break;
        case UI.Video:
            var video = (UIFactory.Factory.CSHTML.Concrete.Video.Video)item;
            @await Html.PartialAsync("~/Views/Shared/_VideoPartial.cshtml", video)
            break;
        default:
            throw new ArgumentException("Unknown type: " + item);
            break;
    }
}
